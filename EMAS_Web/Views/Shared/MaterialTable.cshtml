@model IEnumerable<Model.MaterialPiece>
@using Service.Connection

<div class="fs-3 m-3">
	Количество найденных позиций = <span id="materialTable_visibleRowsCount" class="fs-3"></span>
</div>

<table id="materialTable" class="table table-striped table-bordered">
	<thead>
		<tr>
			<th><input class="form-check-input" type="checkbox" id="checkAll" onchange="setCheckAllVisibleChildElements(document.querySelector('table#materialTable'), this.checked)"></th>
			<th>
				Id<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "1",
						filterOptions = Model.Select(e => e.Id.ToString()).Distinct().ToList(),
						columnName = "Id"
					})
			</th>
			<th>
				Тип<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "2",
						filterOptions = Model.Select(e => e.Type).Distinct().ToList(),
						columnName = "Тип"
					})
			</th>
			<th>
				Марка<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "3",
						filterOptions = Model.Select(e => e.Name).Distinct().ToList(),
						columnName = "Марка"
					})
			</th>
			<th>
				Ед изм<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "4",
						filterOptions = Model.Select(e => e.Units).Distinct().ToList(),
						columnName = "Единицы"
					})
			</th>
			<th>
				Кол-во<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "5",
						filterOptions = Model.Select(e => e.Amount.ToString()).Distinct().ToList(),
						columnName = "Кол-во"
					})
			</th>
			<th>
				Доп-характеристика<div class="resizer"></div>
			</th>
			<th>
				Регистрационный номер<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "7",
						filterOptions = Model.Select(e => e.InventoryNumber).Distinct().ToList(),
						columnName = "Рег. номер"
					})
			</th>
			<th>
				Место<div class="resizer"></div>
				@await Component.InvokeAsync("TableFilterMenu", new
					{
						tableId = "materialTable",
						columnIndex = "8",
						filterOptions = Model.Select(e => e.StorageType).Distinct().ToList(),
						columnName = "Место хранения"
					})
			</th>
			<th>
				Коментарий<div class="resizer"></div>
			</th>
			@if (ViewBag.LastEvents != null)
			{
				<th>
					С момента последнего изменения <div class="resizer"></div>
				</th>
			}
			<th>
			</th>
			@if (ViewBag.MaterialEdit != null)
			{
				if (ViewBag.MaterialEdit)
				{
					<th>
					</th>
				}
			}
		</tr>
	</thead>
	<tbody class="table w-100 table-group-divider">
		@foreach (var item in Model)
		{
			<tr class="d-table-row">
				<td class="border border-1">
					<input class="form-check-input" type="checkbox" id="checkbox_@item.Id" value="@item.Id" aria-label="...">
				</td>
				<td class="border border-1">@item.Id</td>
				<td class="border border-1">@item.Type</td>
				<td class="border border-1">@item.Name</td>
				<td class="border border-1">@item.Units</td>
				<td class="border border-1">@item.Amount</td>
				<td class="border border-1">@item.Extras</td>
				<td class="border border-1">@item.InventoryNumber</td>
				<td class="border border-1">@item.StorageType</td>
				<td class="border border-1">@item.Comment</td>
				@if (ViewBag.LastEvents != null)
				{
					<td class="border border-1">@Service.ElapsedTimeFormatter.FormatTimeAgo(ViewBag.LastEvents[item.Id].DateTime)</td>
				}
				<td class="border border-1">
					<form asp-controller="Archive" asp-action="History" method="get">
						<input type="hidden" name="storableObjectId" value="@item.Id" />
						<button type="submit" class="btn btn-primary">История</button>
					</form>
				</td>
				@if (ViewBag.MaterialEdit != null)
				{
					if (ViewBag.MaterialEdit)
					{
						<td class="border border-1">
							<form asp-controller="StorableObject" asp-action="EditMaterial" method="get">
								<input type="hidden" name="objectId" value="@item.Id" />
								<input type="hidden" name="locationId" value="@(ViewBag.LocationId)" />
								<button type="submit" class="btn btn-warning">Изменить</button>
							</form>
						</td>
					}
				}
			</tr>
		}
	</tbody>
</table>

<script>
	let materialFilterMenu = new TableFilterMenu("materialTable", [1, 2, 3, 4, 5, 7]);

	window.addEventListener('load', function () {
		materialFilterMenu.bindButtons();
		materialFilterMenu.updateRowsCount();
	});

	makeResizable(document.querySelector('table#materialTable'));
</script>
